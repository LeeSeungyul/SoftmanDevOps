plugins {
    id 'java'
    id 'application'
    id 'jacoco'
}

group = 'com.softman.devops'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'ch.qos.logback:logback-classic:1.4.14'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
}

application {
    mainClass = 'com.softman.devops.bootstrap.ApplicationBootstrap'
}

tasks.withType(JavaCompile).configureEach {
    options.release = 21
}

tasks.test {
    useJUnitPlatform()
    finalizedBy tasks.jacocoTestReport
}

jacoco {
    toolVersion = '0.8.11'
}

jacocoTestReport {
    dependsOn tasks.test
}

jacocoTestCoverageVerification {
    dependsOn tasks.test
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.80
            }
        }
        rule {
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }
        }
    }
}

tasks.check {
    dependsOn tasks.jacocoTestCoverageVerification
}

jar {
    archiveFileName = 'SoftmanDevOps.jar'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': application.mainClass.get()
    }
    from {
        configurations.runtimeClasspath.filter { it.exists() }.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
